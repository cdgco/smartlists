<div id="left">
    <div id="inner">
        <h1 class="text-4xl">Let's Get Started</h1>
        <p>Search for your favorite playlist or choose from one of our recommendations to start.</p>
        <form id="playlist-search-form">
            <div class="input-group" style="padding-top:3%;">
                <input class="form-control border-end-0 border" type="text" placeholder="Search" id="playlist-search-input">
                <span class="input-group-append">
                    <button class="btn btn-outline-secondary bg-white border-start-0 border ms-n3" type="submit">
                        <i class="fa fa-search"></i>
                    </button>
                </span>
            </div>
            <div class="col-12 my-3">
                <input type="radio" class="btn-check" onclick="changeRadio(this)" name="options" id="option1" autocomplete="off" checked>
                <label class="btn btn-secondary col-5" for="option1">Followed Playlists</label>

                <input type="radio" class="btn-check" onclick="changeRadio(this)" name="options" id="option2" autocomplete="off">
                <label class="btn btn-secondary col-5" for="option2">All Playlists</label>
            </div>
        </form>
    </div>
    <p class="footer">
        <span class="line">Can't find your playlist?</span>
        <span class="line">Make sure you're following it on Spotify first.</span>
    </p>
</div>

<div id="backRight">
    <div id="right">
        {{#each playlists}}
            {{> bubble title=name imageSrc=(get "url" (first images)) curView="local" }}
        {{/each}}
    </div>
</div>

{{#section 'script'}}
<script type="application/javascript" id="dynamicScript">
$.ajax({
    'type': 'GET',
    'url': '/api/playlists?option=4',
    'dataType': 'json'
}).done(function(data) {
    var userPlaylists = data.result.playlists;
    InsertBubbles(userPlaylists, "local");
    // Animation must be played after the bubbles are finished being added.
    animateFlex("item", "right");
    pjax.refresh();
}).fail(function(err) {
    console.log('Error fetching user-playlists');
});
$.ajax({
    'type': 'GET',
    'url': '/api/featuredPlaylists/update',
});

var radio = "option1";

function changeRadio(el) {
    radio = el.id;
}


document.getElementById('playlist-search-form').addEventListener('submit', function(event) {
    event.preventDefault();
    var search = document.getElementById('playlist-search-input').value;
    if (radio === "option1") {
        var els = document.querySelectorAll('.bubble.global');
        els.forEach(function(el1) {
            el1.remove();
        });
        filterBubbles(search, "local");
    }
    else {
        if (search !== "") {
            var els = document.querySelectorAll('.bubble.local');
            for (var i = 0; i < els.length; i++) {
                els[i].style.display = "none";
            }
            var els2 = document.querySelectorAll('.bubble.global');
            els2.forEach(function(el1) {
                el1.remove();
            });

            $.ajax({
                'type': 'GET',
                'url': '/api/playlists/search?query=' + search + '&public=true',
                'dataType': 'json'
            }).done(function(data) {
                var userPlaylists = data.result.playlists;
                InsertBubbles(userPlaylists, "global");
                // Animation must be played after the bubbles are finished being added.
                animateFlex("item", "right");
                pjax.refresh();
            }).fail(function(err) {
                console.log('Error fetching user-playlists');
            });
        }
    }
});
</script>
{{/section}}
