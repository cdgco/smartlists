    <h1>Spotify Web Playback SDK Quick Start</h1>
    <button id="togglePlay">Play / Pause</button>
    <button id="startPlay">Start Play</button>

    <div class="position-fixed end-0 p-3" style="z-index: 11; top:56px;">
        <div id="liveToast" class="toast hide " role="alert" aria-live="assertive" aria-atomic="true" data-bs-autohide="false" data-bs-animation="false">
                <div class="toast-header">
                    <img style="height: 15px;" src="https://cdn-icons-png.flaticon.com/512/174/174872.png" class="rounded me-2" alt="Spotify">
                    <strong class="me-auto">Spotify</strong>
                    <a href="#" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></a>
                </div>
                <div class="toast-body">
                    Now playing: <span id="toast-msg-text"></span>
                </div>
        </div>
    </div>

    {{#section 'script'}}
    <script src="https://sdk.scdn.co/spotify-player.js"></script>
    <script>
        const myToastEl = document.getElementById('liveToast');
        var playerId;
        window.onSpotifyWebPlaybackSDKReady = () => {
            $.ajax({
                'type': 'GET',
                'url': '/api/auth/session',
                'dataType': 'json'
            }).done(function(data) {
                const token = data.result.token.access_token;
                player = new Spotify.Player({
                    name: 'SmartLists',
                    getOAuthToken: cb => { cb(token); },
                    volume: 0.5
                });
                player.on('initialization_error', function(e) { console.error(e); });

            // Ready
            player.addListener('ready', ({ device_id }) => {
                console.log('Ready with Device ID', device_id);
                playerId = device_id;
            });

            player.addListener('player_state_changed', ({
                    position,
                    duration,
                    paused,
                    track_window: { current_track }
                    }) => {
                    if (paused || duration == position) {
                        $('#liveToast').toast('hide')
                    } else {
                        const errorToast = document.getElementById('liveToast');
                        const toastMsg = document.getElementById('toast-msg-text');
                        if (current_track.artists.length >= 1) {
                            toastMsg.innerHTML = current_track.name + " - " + current_track.artists[0].name;
                        } else {
                            toastMsg.innerHTML = current_track.name;
                        }
                        const toast = new bootstrap.Toast(errorToast);
                        toast.show();
                        }
                    });

            // Not Ready
            player.addListener('not_ready', ({ device_id }) => {
                console.log('Device ID has gone offline', device_id);
            });

            player.addListener('initialization_error', ({ message }) => {
                console.error(message);
            });

            player.addListener('authentication_error', ({ message }) => {
                console.error(message);
            });

            player.addListener('account_error', ({ message }) => {
                console.error(message);
            });

            document.getElementById('togglePlay').onclick = function() {
                player.togglePlay();
            };

            player.connect();
        });
        }
        document.getElementById('startPlay').onclick = function() {
                $.ajax({
                    'type': 'GET',
                    'url': '/api/playback/play?device_id=' + playerId + '&uri=' + encodeURIComponent("spotify:track:6Qwuw0eOeszVlewLpu24gR"),
                    'dataType': 'json'
                })
        };
        
        myToastEl.addEventListener('hide.bs.toast', () => {
            $.ajax({
                    'type': 'GET',
                    'url': '/api/playback/pause?device_id=' + playerId,
                    'dataType': 'json'
                });
        })
    </script>
    {{/section}}